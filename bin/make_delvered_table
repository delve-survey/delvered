#!/usr/bin/env python
#
# Script for generating delvered table of exposures

import os
import shutil
import time
#from argparse import ArgumentParser
from delvered import delvered_exposuredb as delvedb

# Main command-line program
if __name__ == "__main__":
    #parser = ArgumentParser(description='A simple batch job manager.')
    #parser.add_argument('input', type=str, nargs=1, help='File with commands or scripts to run')
    #parser.add_argument('--idle', type=str, default=False, help='IDL program')
    #parser.add_argument('--hyperthread', type=str, default=True, help='')
    #args = parser.parse_args()

    # If the database exists already, back it up
    expdir = '/dl1/users/dnidever/delve/exposures/'
    dbfile = '/dl1/users/dnidever/delve/bricks/delvered_summary.db'
    if os.path.exists(dbfile):
       print(dbfile+' exists already. Backing it up')
       if not os.path.exists('/dl1/users/dnidever/delve/bricks/backup/'): os.mkdir('/dl1/users/dnidever/delve/bricks/backup/')
       # Add the date+time to the filename
       ltime = time.localtime()
       # time.struct_time(tm_year=2019, tm_mon=7, tm_mday=22, tm_hour=0, tm_min=30, tm_sec=20, tm_wday=0, tm_yday=203, tm_isdst=1)
       smonth = str(ltime[1])
       if ltime[1]<10: smonth = '0'+smonth
       sday = str(ltime[2])
       if ltime[2]<10: sday = '0'+sday
       syear = str(ltime[0])[2:]
       shour = str(ltime[3])
       if ltime[3]<10: shour='0'+shour
       sminute = str(ltime[4])
       if ltime[4]<10: sminute='0'+sminute
       ssecond = str(int(ltime[5]))
       if ltime[5]<10: ssecond='0'+ssecond
       logtime = smonth+sday+syear+shour+sminute+ssecond
       backupfile = os.path.splitext(os.path.basename(dbfile))[0]+logtime+'.db'
       shutil.move(dbfile,'/dl1/users/dnidever/delve/bricks/backup/'+backupfile)

    # Run the code
    delvedb.createtable(dbfile)
